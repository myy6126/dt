<?xml version="1.0" encoding="UTF-8"?>
<beans 
    xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jaxws="http://cxf.apache.org/jaxws"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop       
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"
    default-autowire="no" default-lazy-init="false" >
    
    <!-- 启用AOP注解 -->
    <aop:aspectj-autoproxy/> 
    
    <!-- 扫描注解 -->
    <context:component-scan base-package="com.doctortrain.*"></context:component-scan>
       <!-- 读取本地文件 -->
    <!-- 单独读取外部配置文件,在该文件中主要配置了数据库连接的一些信息  属性地方持有者设置  -->
    <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="location">
    		<value>classpath:jdbc.properties</value>
    	</property>
    </bean>
    
    <!-- webService 
    <import resource="classpath*:META-INF/cxf/cxf.xml" />
    <import resource="classpath*:META-INF/cxf/cxf-extension-soap.xml" />
    <import resource="classpath*:META-INF/cxf/cxf-servlet.xml" />
	-->
    <!--下面的class属性值一定要跟你项目中服务实现类的包路径完全一致
    <bean id="findws" class="com.travelsky.fe.service.impl.FindLogInfoWebServiceImpl"/>
    <jaxws:endpoint id="fws" implementor="#findws" address="/fws" />
    -->
    
    
    <!-- 数据源 ComboPoolDataSource -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    	<property name="driverClass" value="${driver}"></property>	
    	<property name="jdbcUrl" value="${url}"></property>	
    	<property name="user" value="${user}"></property>	
    	<property name="password" value="${password}"></property>	
	    
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<property name="maxIdleTime" value="1800" />
		<property name="maxStatements" value="0" />
		<property name="initialPoolSize" value="10" />
		<property name="idleConnectionTestPeriod" value="1800" />
    
    </bean>
    
    <!-- ********************************* 缓 存 ************************************** -->
    
   <!--  <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="host" value="${redis.host}"></constructor-arg>
		<constructor-arg name="port" value="${redis.port}"></constructor-arg>
	</bean> -->
    
    <!-- <context:property-placeholder location="classpath:redis.properties" />   -->
    <!-- 缓存池设置 -->
    
    <!--  <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" ></property>  
        <property name="maxActive" value="${redis.maxActive}" ></property>  
        <property name="maxWait" value="${redis.maxWait}" ></property>  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" ></property>  
    </bean> 
    
    
   	 连接缓存 
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"  p:pool-config-ref="poolConfig"/>  
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean>  -->
    
    <!-- ********************************* 缓 存 ************************************** -->
    
 
    
    <!-- 数据源信息，hibernate配置信息 -->
   	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
   		<property name="dataSource" ref="dataSource"></property>
   		<property name="hibernateProperties">
   			<props>
   				<prop key="hibernate.dialect">com.doctortrain.bean.mysqlcode.MySQL5DialectUTF8</prop>
   				<prop key="current_session_context_class">thread</prop>
   				<prop key="hibernate.show_sql">true</prop>
   				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
   				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
   				<prop key="hibernate.hbm2ddl.auto">update</prop>
   				<!-- <prop key="hibernate.connection.release_mode">after_transaction</prop> -->
   			</props>
   		</property>
	   	 <property name="packagesToScan">
	   			<list>
	   				<value>com.doctortrain.bean</value>
	   			</list>
	   	</property> 
   	</bean>
   	
   	<!--transactionManager HibernateTransactionManager-->
   	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
   	</bean>
   	 
   	<!-- 事务的通知，Advice，Aspect是横切面，是一个抽象的概念，Advice是Aspect的具体实现 | -->
   	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
   		<tx:attributes>
   			<tx:method name="test*" isolation="DEFAULT" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
   			<tx:method name="grow*" isolation="DEFAULT" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
   			<tx:method name="import*" isolation="DEFAULT" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
   			<tx:method name="save*" isolation="DEFAULT" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
   			<tx:method name="ass*" isolation="DEFAULT" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
   			<tx:method name="add*" isolation="DEFAULT" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
   			<tx:method name="update*" isolation= "DEFAULT" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
   			<tx:method name="delete*" isolation="DEFAULT" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
   			<tx:method name="query*" read-only="true"/>
   		</tx:attributes>
   	</tx:advice> 
   	<!-- 切入 -->
   	<aop:config>
   		<aop:advisor advice-ref="transactionAdvice" pointcut="execution(* com.doctortrain.service.*.*(..))"/>
   		 <!-- <aop:aspect id="TestAspect" ref="aspectBean">  
            配置com.spring.service包下所有类或接口的所有方法  
            <aop:pointcut id="studentInfoService"  expression="execution(* com.doctortrain.action.*.*(..))" />  
            <aop:before pointcut-ref="studentInfoService" method=""/>  
        </aop:aspect>  -->
   	</aop:config>
  </beans>
